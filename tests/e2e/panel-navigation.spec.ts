import { test, expect } from '@playwright/test';
import { ElectronAppHelper } from '../helpers/electron-app';

test.describe('Panel Navigation', () => {
  let electronApp: ElectronAppHelper;

  test.beforeEach(async () => {
    electronApp = new ElectronAppHelper();
    await electronApp.launch();
  });

  test.afterEach(async () => {
    await electronApp.close();
  });

  test('‚úÖ Download„Éë„Éç„É´„Å∏„ÅÆÂàá„ÇäÊõø„Åà', async () => {
    const window = electronApp.getWindow();

    // Download„É°„Éã„É•„Éº„Çí„ÇØ„É™„ÉÉ„ÇØ
    await electronApp.click('[data-menu-item="download"]');

    // Download„Éë„Éç„É´„ÅåË°®Á§∫„Åï„Çå„Çã
    await electronApp.waitForSelector('[data-panel="download"]');
    const downloadPanel = await window.$('[data-panel="download"]');
    const isVisible = await downloadPanel?.isVisible();
    expect(isVisible).toBe(true);

    // ‰ªñ„ÅÆ„Éë„Éç„É´„ÅåÈùûË°®Á§∫„Å´„Å™„Çã
    const explorePanel = await window.$('[data-panel="explore"]');
    const isExploreVisible = await explorePanel?.isVisible();
    expect(isExploreVisible).toBe(false);
  });

  test('‚úÖ Explore„Éë„Éç„É´„Å∏„ÅÆÂàá„ÇäÊõø„Åà', async () => {
    const window = electronApp.getWindow();

    // ‰∏ÄÊó¶Âà•„ÅÆ„Éë„Éç„É´„Å´Âàá„ÇäÊõø„Åà
    await electronApp.click('[data-menu-item="log"]');
    await electronApp.waitForSelector('[data-panel="log"]');

    // Explore„É°„Éã„É•„Éº„Çí„ÇØ„É™„ÉÉ„ÇØ
    await electronApp.click('[data-menu-item="explore"]');

    // Explore„Éë„Éç„É´„ÅåË°®Á§∫„Åï„Çå„Çã
    await electronApp.waitForSelector('[data-panel="explore"]');
    const explorePanel = await window.$('[data-panel="explore"]');
    const isVisible = await explorePanel?.isVisible();
    expect(isVisible).toBe(true);

    // Explore„Éë„Éç„É´ÂÜÖ„ÅÆ„Ç≥„É≥„Éù„Éº„Éç„É≥„ÉàÁ¢∫Ë™ç
    const folderTree = await window.$('.explore-panel-sidebar');
    const imageGrid = await window.$('.explore-panel-content');
    expect(await folderTree?.isVisible()).toBe(true);
    expect(await imageGrid?.isVisible()).toBe(true);
  });

  test('‚úÖ Log„Éë„Éç„É´„Å∏„ÅÆÂàá„ÇäÊõø„Åà', async () => {
    const window = electronApp.getWindow();

    // Log„É°„Éã„É•„Éº„Çí„ÇØ„É™„ÉÉ„ÇØ
    await electronApp.click('[data-menu-item="log"]');

    // Log„Éë„Éç„É´„ÅåË°®Á§∫„Åï„Çå„Çã
    await electronApp.waitForSelector('[data-panel="log"]');
    const logPanel = await window.$('[data-panel="log"]');
    const isVisible = await logPanel?.isVisible();
    expect(isVisible).toBe(true);

    // Log„Éë„Éç„É´„ÅÆ„Ç≥„É≥„Éù„Éº„Éç„É≥„ÉàÁ¢∫Ë™ç
    const logPanelElement = await window.$('[data-panel="log"]');
    expect(await logPanelElement?.isVisible()).toBe(true);
  });

  test('‚úÖ Setting„Éë„Éç„É´„Å∏„ÅÆÂàá„ÇäÊõø„Åà', async () => {
    const window = electronApp.getWindow();

    // Setting„É°„Éã„É•„Éº„Çí„ÇØ„É™„ÉÉ„ÇØ
    await electronApp.click('[data-menu-item="setting"]');

    // Setting„Éë„Éç„É´„ÅåË°®Á§∫„Åï„Çå„Çã
    await electronApp.waitForSelector('[data-panel="setting"]');
    const settingPanel = await window.$('[data-panel="setting"]');
    const isVisible = await settingPanel?.isVisible();
    expect(isVisible).toBe(true);

    // Setting„Éë„Éç„É´„ÅÆ„Ç≥„É≥„Éù„Éº„Éç„É≥„ÉàÁ¢∫Ë™ç
    const settingPanelElement = await window.$('[data-panel="setting"]');
    expect(await settingPanelElement?.isVisible()).toBe(true);
  });

  test('‚úÖ „Éë„Éç„É´Âàá„ÇäÊõø„ÅàÊôÇ„ÅÆ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥', async () => {
    const window = electronApp.getWindow();

    // ÂàùÊúüÁä∂ÊÖã„ÇíË®òÈå≤
    const initialPanel = await window.$('[data-panel="explore"]');
    const initialOpacity = await initialPanel?.evaluate((el) => {
      return window.getComputedStyle(el).opacity;
    });

    // „Éë„Éç„É´„ÇíÂàá„ÇäÊõø„Åà
    await electronApp.click('[data-menu-item="download"]');

    // „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥‰∏≠„ÅÆÁä∂ÊÖã„ÇíÁ¢∫Ë™ç
    const transitioningPanel = await window.$('[data-panel="download"]');
    const transitionStyle = await transitioningPanel?.evaluate((el) => {
      const style = window.getComputedStyle(el);
      return {
        transition: style.transition,
        opacity: style.opacity
      };
    });

    // „Éà„É©„É≥„Ç∏„Ç∑„Éß„É≥„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
    expect(transitionStyle?.transition).toBeTruthy();

    // „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ÂÆå‰∫Ü„ÇíÂæÖ„Å§
    await window.waitForTimeout(500);

    // ÊúÄÁµÇÁä∂ÊÖã„ÇíÁ¢∫Ë™ç
    const finalOpacity = await transitioningPanel?.evaluate((el) => {
      return window.getComputedStyle(el).opacity;
    });
    expect(finalOpacity).toBe('1');
  });

  test('‚úÖ Download„Éë„Éç„É´„ÅÆÂàùÊúü„Ç≥„É≥„ÉÜ„É≥„ÉÑ', async () => {
    const window = electronApp.getWindow();

    await electronApp.click('[data-menu-item="download"]');
    await electronApp.waitForSelector('[data-panel="download"]');

    // Download„Éë„Éç„É´„ÅÆÁ¢∫Ë™ç
    const downloadPanel = await window.$('[data-panel="download"]');
    expect(await downloadPanel?.isVisible()).toBe(true);
  });

  test('‚úÖ Log„Éë„Éç„É´„ÅÆ„Éï„Ç£„É´„Çø„É™„É≥„Ç∞Ê©üËÉΩ', async () => {
    const window = electronApp.getWindow();

    await electronApp.click('[data-menu-item="log"]');
    await electronApp.waitForSelector('[data-panel="log"]');

    // Log„Éë„Éç„É´„ÅÆÁ¢∫Ë™ç
    const logPanel = await window.$('[data-panel="log"]');
    expect(await logPanel?.isVisible()).toBe(true);
  });

  test('‚úÖ Setting„Éë„Éç„É´„ÅÆË®≠ÂÆöÈ†ÖÁõÆ', async () => {
    const window = electronApp.getWindow();

    await electronApp.click('[data-menu-item="setting"]');
    await electronApp.waitForSelector('[data-panel="setting"]');

    // Setting„Éë„Éç„É´„ÅÆÁ¢∫Ë™ç
    const settingPanel = await window.$('[data-panel="setting"]');
    expect(await settingPanel?.isVisible()).toBe(true);
  });

  test('‚úÖ ÈÄ£Á∂ö„Åó„Åü„Éë„Éç„É´Âàá„ÇäÊõø„Åà', async () => {
    const window = electronApp.getWindow();

    const panels = ['download', 'log', 'setting', 'explore'];

    for (const panel of panels) {
      // „Éë„Éç„É´„ÇíÂàá„ÇäÊõø„Åà
      await electronApp.click(`[data-menu-item="${panel}"]`);

      // „Éë„Éç„É´„ÅåË°®Á§∫„Åï„Çå„Çã„Åæ„ÅßÂæÖ„Å§
      await electronApp.waitForSelector(`[data-panel="${panel}"]`);

      // „Éë„Éç„É´„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
      const currentPanel = await window.$(`[data-panel="${panel}"]`);
      const isVisible = await currentPanel?.isVisible();
      expect(isVisible).toBe(true);

      // ‰ªñ„ÅÆ„Éë„Éç„É´„ÅåÈùûË°®Á§∫„Åß„ÅÇ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
      for (const otherPanel of panels) {
        if (otherPanel !== panel) {
          const other = await window.$(`[data-panel="${otherPanel}"]`);
          const isOtherVisible = await other?.isVisible();
          expect(isOtherVisible).toBe(false);
        }
      }
    }
  });

  test('‚úÖ „Éë„Éç„É´„ÅÆ„Çπ„ÇØ„É≠„Éº„É´Âãï‰Ωú', async () => {
    const window = electronApp.getWindow();

    // Log„Éë„Éç„É´„Åß„Çπ„ÇØ„É≠„Éº„É´„Çí„ÉÜ„Çπ„Éà
    await electronApp.click('[data-menu-item="log"]');
    await electronApp.waitForSelector('[data-panel="log"]');

    const logContainer = await window.$('.log-container');

    // „Çπ„ÇØ„É≠„Éº„É´ÂèØËÉΩ„Åß„ÅÇ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
    const scrollHeight = await logContainer?.evaluate((el) => el.scrollHeight);
    const clientHeight = await logContainer?.evaluate((el) => el.clientHeight);

    // „Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅåÂçÅÂàÜ„Å´„ÅÇ„ÇãÂ†¥Âêà„ÄÅ„Çπ„ÇØ„É≠„Éº„É´ÂèØËÉΩ
    if (scrollHeight && clientHeight && scrollHeight > clientHeight) {
      // „Çπ„ÇØ„É≠„Éº„É´„ÉÄ„Ç¶„É≥
      await logContainer?.evaluate((el) => {
        el.scrollTop = el.scrollHeight;
      });

      const scrollTop = await logContainer?.evaluate((el) => el.scrollTop);
      expect(scrollTop).toBeGreaterThan(0);
    }
  });

  test('‚úÖ „Éë„Éç„É´Âàá„ÇäÊõø„ÅàÊôÇ„ÅÆ„Éï„Ç©„Éº„Ç´„ÇπÁÆ°ÁêÜ', async () => {
    const window = electronApp.getWindow();

    // Download„Éë„Éç„É´„Å´Âàá„ÇäÊõø„Åà„Å¶„Éï„Ç©„Éº„Ç´„Çπ„ÇíÁ¢∫Ë™ç
    await electronApp.click('[data-menu-item="download"]');
    await electronApp.waitForSelector('[data-panel="download"]');

    // Download„Éë„Éç„É´„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
    const downloadPanel = await window.$('[data-panel="download"]');
    expect(await downloadPanel?.isVisible()).toBe(true);
  });

  test('üì∏ ÂêÑ„Éë„Éç„É´„ÅÆ„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà', async () => {
    const window = electronApp.getWindow();

    const panels = ['download', 'explore', 'log', 'setting'];

    for (const panel of panels) {
      await electronApp.click(`[data-menu-item="${panel}"]`);
      await electronApp.waitForSelector(`[data-panel="${panel}"]`);
      await window.waitForTimeout(500); // „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ÂÆå‰∫ÜÂæÖ„Å°

      await electronApp.takeScreenshot(`panel-${panel}`);
    }
  });
});