import { test, expect } from '@playwright/test';
import { ElectronAppHelper } from '../helpers/electron-app';

test.describe('Panel Navigation', () => {
  let electronApp: ElectronAppHelper;

  test.beforeEach(async () => {
    electronApp = new ElectronAppHelper();
    await electronApp.launch();
  });

  test.afterEach(async () => {
    await electronApp.close();
  });

  test('‚úÖ Download„Éë„Éç„É´„Å∏„ÅÆÂàá„ÇäÊõø„Åà', async () => {
    const window = electronApp.getWindow();

    // Download„É°„Éã„É•„Éº„Çí„ÇØ„É™„ÉÉ„ÇØ
    await window.click('[data-menu-item="download"]');

    // Download„Éë„Éç„É´„ÅåË°®Á§∫„Åï„Çå„Çã
    await window.waitForSelector('[data-panel="download"]', { state: 'visible' });
    const downloadPanel = await window.locator('[data-panel="download"]').isVisible();
    expect(downloadPanel).toBe(true);

    // ‰ªñ„ÅÆ„Éë„Éç„É´„ÅåÈùûË°®Á§∫„Å´„Å™„Çã
    const explorePanel = await window.locator('[data-panel="explore"]').isVisible();
    expect(explorePanel).toBe(false);
  });

  test('‚úÖ Explore„Éë„Éç„É´„Å∏„ÅÆÂàá„ÇäÊõø„Åà', async () => {
    const window = electronApp.getWindow();

    // ‰∏ÄÊó¶Âà•„ÅÆ„Éë„Éç„É´„Å´Âàá„ÇäÊõø„Åà
    await window.click('[data-menu-item="log"]');
    await window.waitForSelector('[data-panel="log"]', { state: 'visible' });

    // Explore„É°„Éã„É•„Éº„Çí„ÇØ„É™„ÉÉ„ÇØ
    await window.click('[data-menu-item="explore"]');

    // Explore„Éë„Éç„É´„ÅåË°®Á§∫„Åï„Çå„Çã
    await window.waitForSelector('[data-panel="explore"]', { state: 'visible' });
    const explorePanel = await window.locator('[data-panel="explore"]').isVisible();
    expect(explorePanel).toBe(true);

    // Explore„Éë„Éç„É´ÂÜÖ„ÅÆ„Ç≥„É≥„Éù„Éº„Éç„É≥„ÉàÁ¢∫Ë™ç
    const folderTree = await window.locator('.explore-panel-sidebar').isVisible();
    const imageGrid = await window.locator('.explore-panel-content').isVisible();
    expect(folderTree).toBe(true);
    expect(imageGrid).toBe(true);
  });

  test('‚úÖ Log„Éë„Éç„É´„Å∏„ÅÆÂàá„ÇäÊõø„Åà', async () => {
    const window = electronApp.getWindow();

    // Log„É°„Éã„É•„Éº„Çí„ÇØ„É™„ÉÉ„ÇØ
    await window.click('[data-menu-item="log"]');

    // Log„Éë„Éç„É´„ÅåË°®Á§∫„Åï„Çå„Çã
    await window.waitForSelector('[data-panel="log"]', { state: 'visible' });
    const logPanel = await window.locator('[data-panel="log"]').isVisible();
    expect(logPanel).toBe(true);
  });

  test('‚úÖ Setting„Éë„Éç„É´„Å∏„ÅÆÂàá„ÇäÊõø„Åà', async () => {
    const window = electronApp.getWindow();

    // Setting„É°„Éã„É•„Éº„Çí„ÇØ„É™„ÉÉ„ÇØ
    await window.click('[data-menu-item="setting"]');

    // Setting„Éë„Éç„É´„ÅåË°®Á§∫„Åï„Çå„Çã
    await window.waitForSelector('[data-panel="setting"]', { state: 'visible' });
    const settingPanel = await window.locator('[data-panel="setting"]').isVisible();
    expect(settingPanel).toBe(true);
  });

  test('‚úÖ „Éë„Éç„É´Âàá„ÇäÊõø„ÅàÊôÇ„ÅÆ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥', async () => {
    const window = electronApp.getWindow();

    // ÂàùÊúüÁä∂ÊÖã„ÇíË®òÈå≤
    const initialPanel = window.locator('[data-panel="explore"]');
    const initialOpacity = await initialPanel.evaluate((el) => {
      return window.getComputedStyle(el).opacity;
    });

    // „Éë„Éç„É´„ÇíÂàá„ÇäÊõø„Åà
    await window.click('[data-menu-item="download"]');

    // „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥‰∏≠„ÅÆÁä∂ÊÖã„ÇíÁ¢∫Ë™ç
    const transitioningPanel = window.locator('[data-panel="download"]');
    const transitionStyle = await transitioningPanel.evaluate((el) => {
      const style = window.getComputedStyle(el);
      return {
        transition: style.transition,
        opacity: style.opacity
      };
    });

    // „Éà„É©„É≥„Ç∏„Ç∑„Éß„É≥„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™çÔºà„Åæ„Åü„ÅØÂç≥Â∫ß„Å´Âàá„ÇäÊõø„Çè„ÇãÔºâ
    // Ê≥®: ÁèæÂú®„ÅÆÂÆüË£Ö„Åß„ÅØ display:none/block „ÅßÂàá„ÇäÊõø„Åà„Å¶„ÅÑ„Çã„Åü„ÇÅ„ÄÅtransition„ÅØÁÑ°„ÅÑÂèØËÉΩÊÄß„Åå„ÅÇ„Çã
    expect(transitionStyle).toBeTruthy();

    // „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ÂÆå‰∫Ü„ÇíÂæÖ„Å§
    await window.waitForTimeout(500);

    // ÊúÄÁµÇÁä∂ÊÖã„ÇíÁ¢∫Ë™ç
    const finalOpacity = await transitioningPanel.evaluate((el) => {
      return window.getComputedStyle(el).opacity;
    });
    expect(finalOpacity).toBe('1');
  });

  test('‚úÖ Download„Éë„Éç„É´„ÅÆÂàùÊúü„Ç≥„É≥„ÉÜ„É≥„ÉÑ', async () => {
    const window = electronApp.getWindow();

    await window.click('[data-menu-item="download"]');
    await window.waitForSelector('[data-panel="download"]', { state: 'visible' });

    // Download„Éë„Éç„É´„ÅÆÁ¢∫Ë™ç
    const downloadPanel = await window.locator('[data-panel="download"]').isVisible();
    expect(downloadPanel).toBe(true);
  });

  test('‚úÖ Log„Éë„Éç„É´„ÅÆ„Éï„Ç£„É´„Çø„É™„É≥„Ç∞Ê©üËÉΩ', async () => {
    const window = electronApp.getWindow();

    await window.click('[data-menu-item="log"]');
    await window.waitForSelector('[data-panel="log"]', { state: 'visible' });

    // Log„Éë„Éç„É´„ÅÆÁ¢∫Ë™ç
    const logPanel = await window.locator('[data-panel="log"]').isVisible();
    expect(logPanel).toBe(true);
  });

  test('‚úÖ Setting„Éë„Éç„É´„ÅÆË®≠ÂÆöÈ†ÖÁõÆ', async () => {
    const window = electronApp.getWindow();

    await window.click('[data-menu-item="setting"]');
    await window.waitForSelector('[data-panel="setting"]', { state: 'visible' });

    // Setting„Éë„Éç„É´„ÅÆÁ¢∫Ë™ç
    const settingPanel = await window.locator('[data-panel="setting"]').isVisible();
    expect(settingPanel).toBe(true);
  });

  test('‚úÖ ÈÄ£Á∂ö„Åó„Åü„Éë„Éç„É´Âàá„ÇäÊõø„Åà', async () => {
    const window = electronApp.getWindow();

    const panels = ['download', 'log', 'setting', 'explore'];

    for (const panel of panels) {
      // „Éë„Éç„É´„ÇíÂàá„ÇäÊõø„Åà
      await window.click(`[data-menu-item="${panel}"]`);

      // „Éë„Éç„É´„ÅåË°®Á§∫„Åï„Çå„Çã„Åæ„ÅßÂæÖ„Å§
      await window.waitForSelector(`[data-panel="${panel}"]`, { state: 'visible' });

      // „Éë„Éç„É´„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
      const currentPanel = await window.locator(`[data-panel="${panel}"]`).isVisible();
      expect(currentPanel).toBe(true);

      // ‰ªñ„ÅÆ„Éë„Éç„É´„ÅåÈùûË°®Á§∫„Åß„ÅÇ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
      for (const otherPanel of panels) {
        if (otherPanel !== panel) {
          const isOtherVisible = await window.locator(`[data-panel="${otherPanel}"]`).isVisible();
          expect(isOtherVisible).toBe(false);
        }
      }
    }
  });

  test('‚úÖ „Éë„Éç„É´„ÅÆ„Çπ„ÇØ„É≠„Éº„É´Âãï‰Ωú', async () => {
    const window = electronApp.getWindow();

    // Log„Éë„Éç„É´„Åß„Çπ„ÇØ„É≠„Éº„É´„Çí„ÉÜ„Çπ„Éà
    await window.click('[data-menu-item="log"]');
    await window.waitForSelector('[data-panel="log"]', { state: 'visible' });

    const logContainer = window.locator('.log-container');

    // „Çπ„ÇØ„É≠„Éº„É´ÂèØËÉΩ„Åß„ÅÇ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
    const scrollInfo = await logContainer.evaluate((el) => ({
      scrollHeight: el.scrollHeight,
      clientHeight: el.clientHeight
    }));

    // „Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅåÂçÅÂàÜ„Å´„ÅÇ„ÇãÂ†¥Âêà„ÄÅ„Çπ„ÇØ„É≠„Éº„É´ÂèØËÉΩ
    if (scrollInfo.scrollHeight > scrollInfo.clientHeight) {
      // „Çπ„ÇØ„É≠„Éº„É´„ÉÄ„Ç¶„É≥
      await logContainer.evaluate((el) => {
        el.scrollTop = el.scrollHeight;
      });

      const scrollTop = await logContainer.evaluate((el) => el.scrollTop);
      expect(scrollTop).toBeGreaterThan(0);
    }
  });

  test('‚úÖ „Éë„Éç„É´Âàá„ÇäÊõø„ÅàÊôÇ„ÅÆ„Éï„Ç©„Éº„Ç´„ÇπÁÆ°ÁêÜ', async () => {
    const window = electronApp.getWindow();

    // Download„Éë„Éç„É´„Å´Âàá„ÇäÊõø„Åà„Å¶„Éï„Ç©„Éº„Ç´„Çπ„ÇíÁ¢∫Ë™ç
    await window.click('[data-menu-item="download"]');
    await window.waitForSelector('[data-panel="download"]', { state: 'visible' });

    // Download„Éë„Éç„É´„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
    const downloadPanel = await window.locator('[data-panel="download"]').isVisible();
    expect(downloadPanel).toBe(true);
  });

  test('üì∏ ÂêÑ„Éë„Éç„É´„ÅÆ„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà', async () => {
    const window = electronApp.getWindow();

    const panels = ['download', 'explore', 'log', 'setting'];

    for (const panel of panels) {
      await window.click(`[data-menu-item="${panel}"]`);
      await window.waitForSelector(`[data-panel="${panel}"]`, { state: 'visible' });
      await window.waitForTimeout(500); // „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ÂÆå‰∫ÜÂæÖ„Å°

      await electronApp.takeScreenshot(`panel-${panel}`);
    }
  });
});